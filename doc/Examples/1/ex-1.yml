#!/usr/bin/env yaml2any
#
---
#-------------------------------------------------------------------------------
# Document 0, The document to start with.
#
- DocumentControl:
   Translator: Xml

   SendTo:
    # ex-1.yml -s cat
    #
    cat: '| cat > __BASENAME__.html'

    # ex-1.yml -s xml
    #
    xml: |
     | xmllint --format -
     | sed "/<?xml version=\"1.0\"?>/ { D }" > __BASENAME__.html

    # ex-1.yml -s wk
    #
    # Stream the data directly to wkhtmltopdf.
    #
    wk: '| wkhtmltopdf - __BASENAME__.pdf'

    # ex-1.yml -s wk2
    #
    # xmllint formats the file nicely treating it as an xml file causing it to
    # be prefixed with an xml prelude. Sed is used to remove that prelude. If
    # not, the program wkhtmltopdf will not function properly.
    #
    wk2: |
     | xmllint --format - 
     | sed "/<?xml version=\"1.0\"?>/ { D }" > __BASENAME__.html
     ; wkhtmltopdf __BASENAME__.html __BASENAME__.pdf

# html 5
- DOCTYPE root=html:
- html lang=en-US dir=ltr:
   - head:
      - meta charset=utf-8:
      - title: Example 1.
      - !perl/Data2any::Any::IncludeDocument
         type: includeThis
         document: 1
   - body:
      - div id=svg1:
         - svg xmlns=http://www.w3.org/2000/svg:
           width=450 height=450 viewport='0 0 300 300':
            - g fill-opacity=0.7 stroke=black stroke-width=0.1cm:
               - circle cx=6cm cy=2cm r=100 fill=red transform='translate(0 50)':
               - circle cx=6cm cy=2cm r=100 fill=blue transform='translate(70 150)':
               - circle cx=6cm cy=2cm r=100 fill=green transform='translate(-70 150)':

      - div id=text1:
         - !perl/Data2any::Any::LoremIpsum
            type: Cicero-45BC-1.10.33
---
#-------------------------------------------------------------------------------
# Document 0, Css stylesheet
#
- style: >

   #svg1
   {
     background-color:          #ffffe0;
   }

   #text1
   {
     border-width:              3px;
     border-color:              #ff0;
     background-color:          #055;
     color:                     #ffd;
     margin:                    1px;
     padding:                   4px;
   }

---
- DOCTYPE root=svg type=PUBLIC:
   id: -//W3C//DTD SVG 1.1//EN
   dtd: http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd
---
################################################################################
# - Docbook v5.* do not use a dtd defined with DOCTYPE anymore
# - Program to translate is xsltproc
# - Stylesheets are found at /usr/share/sgml/docbook
#
# Book to describe the Data2any perl module
#
################################################################################
# 
- DocumentControl:
#   Translator: Xml

   SendTo:
    xml: '| xmllint --format - > __BASENAME__.xml'
    xep: |
     | xsltproc --encoding utf-8 --xinclude ../book-stylesheet.xsl -
     | xep -fo - -pdf __BASENAME__.pdf
    chk: |
     | tee Data2any.xml | xmllint --format -
     | rnv /usr/share/xml/docbook5/schema/rng/5.0/docbook.rnc


- XML version=1.0 encoding=utf-8:
- DOCTYPE root=book:


- book:
  xmlns=http://docbook.org/ns/docbook:
  xmlns:xi=http://www.w3.org/2001/XInclude:
  xmlns:xl=http://www.w3.org/1999/xlink:
#  version=5.0 xml:lang=en revisionflag=changed:
  version=5.0 xml:lang=en:
   - title: Using docbook to show SVG examples
   - info:
      - author:
         - personname:
            - firstname: Marcel
            - surname: Timmerman
	 - email: mt1957@gmail.com
      - address:
         - city: Haarlem
	 - country: Netherlands
      - copyright:
         - year: 2013
	 - holder: Marcel Timmerman
      - date: $date


   - !perl/Data2any::Any::IncludeDocument
      type: includeThis
      document: 1	 

---
- chapter:
   - info:
      - title: How to use YAML
   
   - section:
      - info:
         - title: Short introduction to YAML

      - para:
	 - figure floatstyle=left pgwide=0:
	    - mediaobject:
	       - imageobject:
#		  - imagedata format=SVG width=75 align=right:
		  - imagedata format=SVG width=75 align=right:
		     - !perl/Data2any::Any::IncludeDocument
                        type: includeThis
                        document: 2

---
- svg width=1200 height=3600 viewBox='0 0 1000 300' version=1.1:
  xmlns=http://www.w3.org/2000/svg:
  xmlns:xl=http://www.w3.org/1999/xl:
   - defs:
      - path id=MyPath:
         d: >
          M 100 200
          C 200 100 300   0 400 100
          C 500 200 600 300 700 200
          C 800 100 900 100 900 100
   - desc: Example toap01 - simple text on a path
   - use xl:href=#MyPath fill=none stroke=red:
   - text font-size=42.5 fill=blue:
      - textPath xl:href=#MyPath: We go up, then we go down, then up again

   # Show outline of canvas using 'rect' element
   - rect x=1 y=1 width=998 height=298 fill=none stroke=blue stroke-width=2:

---
- chapter:
   - info:
      - title: How to use YAML
   
   - section:
      - info:
         - title: Short introduction to YAML

      - para:
	 - figure floatstyle=left pgwide=1:
	    - mediaobject:
	       - imageobject:
#		  - imagedata format=SVG width=75 align=right:
		  - imagedata format=SVG width=75 align=right:
		     - svg version=1.1 baseprofile=full:
		       xmlns=http://www.w3.org/2000/svg:
		       width=300 height=200:
			- rect width=300 height=200 fill=red:
			- circle cx=150 cy=100 r=80 fill=green:
			- text x=150 y=125 font-size=60:
			  text-anchor=middle fill=white: SVG
